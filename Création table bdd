CREATE DATABASE Electronic;

USE Electronic;

CREATE TABLE Ville(
   ID_Ville INT PRIMARY KEY IDENTITY,
   Nom_ville VARCHAR(50),
   CodePostal_Ville INT,
   PRIMARY KEY(ID_Ville)
);

CREATE TABLE Dates_Utiles(
   Id_Dates_Utiles INT PRIMARY KEY IDENTITY,
   Commande_Dates_Utiles DATE,
   Emission_Dates_Utiles DATE,
   Livraison_Prevue_Dates_Utiles DATE,
   PRIMARY KEY(Id_Dates_Utiles)
);

CREATE TABLE Remise(
   ID_Remise INT PRIMARY KEY IDENTITY,
   Valeur_Remise DOUBLE,
   PRIMARY KEY(ID_Remise)
);

CREATE TABLE Stock(
   ID_Stock INT PRIMARY KEY IDENTITY,
   Quantite_Stock INT,
   Seuil_Reapprovisionneent_Stock INT,
   PRIMARY KEY(ID_Stock)
);

CREATE TABLE Modif(
   Id_Modif INT PRIMARY KEY IDENTITY,
   Taux_TVA_Modif DOUBLE,
   Taux_Reduction_Modif DOUBLE,
   PRIMARY KEY(Id_Modif)
);

CREATE TABLE Adresse(
   ID_Adresse INT PRIMARY KEY IDENTITY,
   Rue_Adresse VARCHAR(50),
   Numero_Maison_Adresse INT,
   Nature_Adresse VARCHAR(50),
   ID_Ville INT NOT NULL,
   PRIMARY KEY(ID_Adresse),
   FOREIGN KEY(ID_Ville) REFERENCES Ville(ID_Ville)
);

CREATE TABLE Commande(
   Id_Commande INT PRIMARY KEY IDENTITY,
   Reference_Commande VARCHAR(50),
   Id_Dates_Utiles INT NOT NULL,
   PRIMARY KEY(Reference_Commande),
   FOREIGN KEY(Id_Dates_Utiles) REFERENCES Dates_Utiles(Id_Dates_Utiles)
);

CREATE TABLE Article(
   Id_Article INT PRIMARY KEY IDENTITY,
   Prix_HT_Article CURRENCY,
   Nom_Article VARCHAR(50),
   Quantite_Article INT,
   SeuilReduction_Article VARCHAR(50),
   ID_Stock INT NOT NULL,
   FOREIGN KEY(ID_Stock) REFERENCES Stock(ID_Stock)
);

CREATE TABLE Paiement(
   ID_Paiement INT PRIMARY KEY IDENTITY,
   Moyen_Paiement VARCHAR(50),
   Date_Paiement DATE,
   Date_Solde_Paiement DATE,
   Reference_Commande VARCHAR(50) NOT NULL,
   PRIMARY KEY(ID_Paiement),
   FOREIGN KEY(Reference_Commande) REFERENCES Commande(Reference_Commande)
);

CREATE TABLE Personne(
   ID_Personne INT PRIMARY KEY IDENTITY,
   Nom_Personne VARCHAR(50),
   Prenom_Personne VARCHAR(50),
   ID_Adresse INT NOT NULL,
   PRIMARY KEY(ID_Personne),
   FOREIGN KEY(ID_Adresse) REFERENCES Adresse(ID_Adresse)
);

CREATE TABLE Clients(
   ID_Clients INT PRIMARY KEY IDENTITY,
   Date_Naissance_Clients DATE,
   Date_Premier_Achat_Clients DATE,
   ID_Personne INT NOT NULL,
   PRIMARY KEY(ID_Clients),
   UNIQUE(ID_Personne),
   FOREIGN KEY(ID_Personne) REFERENCES Personne(ID_Personne)
);

CREATE TABLE SuperieurHierarchique(
   ID_SuperieurHierarchique INT PRIMARY KEY IDENTITY,
   DateEmbauche_SuperieurHierarchique DATE,
   ID_Personne INT NOT NULL,
   PRIMARY KEY(ID_SuperieurHierarchique),
   UNIQUE(ID_Personne),
   FOREIGN KEY(ID_Personne) REFERENCES Personne(ID_Personne)
);

CREATE TABLE Personnel(
   ID_Personnel INT PRIMARY KEY IDENTITY,
   DateEmbauche_personnel DATE,
   ID_SuperieurHierarchique INT NOT NULL,
   ID_Personne INT NOT NULL,
   PRIMARY KEY(ID_Personnel),
   UNIQUE(ID_Personne),
   FOREIGN KEY(ID_SuperieurHierarchique) REFERENCES SuperieurHierarchique(ID_SuperieurHierarchique),
   FOREIGN KEY(ID_Personne) REFERENCES Personne(ID_Personne)
);

CREATE TABLE Effectue(
   ID_Clients INT,
   Reference_Commande VARCHAR(50),
   PRIMARY KEY(ID_Clients, Reference_Commande),
   FOREIGN KEY(ID_Clients) REFERENCES Clients(ID_Clients),
   FOREIGN KEY(Reference_Commande) REFERENCES Commande(Reference_Commande)
);

CREATE TABLE Compos√©(
   Reference_Commande VARCHAR(50),
   Reference_Article INT,
   PRIMARY KEY(Reference_Commande, Reference_Article),
   FOREIGN KEY(Reference_Commande) REFERENCES Commande(Reference_Commande),
   FOREIGN KEY(Reference_Article) REFERENCES Article(Reference_Article)
);

CREATE TABLE Comprend(
   Reference_Commande VARCHAR(50),
   ID_Remise INT,
   PRIMARY KEY(Reference_Commande, ID_Remise),
   FOREIGN KEY(Reference_Commande) REFERENCES Commande(Reference_Commande),
   FOREIGN KEY(ID_Remise) REFERENCES Remise(ID_Remise)
);

CREATE TABLE Comporte(
   Reference_Article INT,
   Id_Modif INT,
   PRIMARY KEY(Reference_Article, Id_Modif),
   FOREIGN KEY(Reference_Article) REFERENCES Article(Reference_Article),
   FOREIGN KEY(Id_Modif) REFERENCES Modif(Id_Modif)
);
