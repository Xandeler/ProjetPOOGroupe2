//Calculer le prix moyen d'un panier
SELECT
  SUM(Prix_HT_Article * Taux_TVA_Modif * Quantite_Commande_Article * 
	CASE 
            WHEN ISNULL(Modif.Taux_Reduction_Modif, 0) = 0 THEN 1 
            ELSE Modif.Taux_Reduction_Modif 
        END) / SUM(Quantite_Commande_Article) AS PrixPanierMoyen
FROM
  Article
  INNER JOIN 
	Compose ON Article.Reference_Article = Compose.Reference_Article
  INNER JOIN 
	Commande ON Compose.ID_Commande = Commande.ID_Commande
  INNER JOIN 
	Comporte ON Comporte.Reference_Article = Article.Reference_Article
  INNER JOIN 
	Modif ON Modif.ID_Modif = Comporte.ID_Modif
WHERE
  Commande.ID_Commande = 1; // Ajouter un getId_commande dans le code sur visual studio


//Calcul_Chiffre_Affaires
SELECT 
    SUM(a.Prix_HT_Article * c.Quantite_Commande_Article) AS Total_HT,
    SUM((a.Prix_HT_Article * c.Quantite_Commande_Article * m.Taux_TVA_Modif)) - SUM(a.Prix_HT_Article * c.Quantite_Commande_Article) AS Total_TVA,
    SUM((a.Prix_HT_Article * c.Quantite_Commande_Article * (m.Taux_TVA_Modif)) * 
        CASE 
            WHEN ISNULL(r.Valeur_Remise, 0) = 0 THEN 1 
            ELSE r.Valeur_Remise 
        END) AS Total_TTC
FROM 
    Compose c
JOIN 
    Article a ON c.Reference_Article = a.Reference_Article
JOIN 
    Comporte com ON a.Reference_Article = com.Reference_Article
JOIN 
    Modif m ON com.ID_Modif = m.ID_Modif
JOIN 
    Commande co ON c.ID_Commande = co.ID_Commande
LEFT JOIN 
    Comprend cr ON co.ID_Commande = cr.ID_Commande
LEFT JOIN 
    Remise r ON cr.ID_Remise = r.ID_Remise


//Calcul_Valeur_Commerciale_Stock
SELECT SUM((Prix_HT_Article * (Modif.Taux_TVA_Modif)) * Quantite_Stock_Article) AS Valeur_Commerciale_Stock
FROM Article
INNER JOIN Comporte ON Article.Reference_Article = Comporte.Reference_Article
INNER JOIN Modif ON Comporte.ID_Modif = Modif.ID_Modif;

//Calcul_Valeur_Achat_Stock
SELECT SUM(Prix_HT_Article * Quantite_Stock_Article) AS Valeur_Commerciale_Stock
FROM Article


//Articles_Plus_Vendus
SELECT TOP 10 Article.Nom_Article, SUM(Quantite_Commande_Article) AS Total_Ventes
FROM Article
LEFT JOIN Compose ON Article.Reference_Article = Compose.Reference_Article
GROUP BY Article.Reference_Article, Article.Nom_Article
ORDER BY Total_Ventes DESC;


//Articles_Moins_Vendus
SELECT TOP 10 Article.Nom_Article, SUM(Quantite_Commande_Article) AS Total_Ventes
FROM Article
LEFT JOIN Compose ON Article.Reference_Article = Compose.Reference_Article
GROUP BY Article.Reference_Article, Article.Nom_Article
ORDER BY Total_Ventes ASC;

//Produit_A_Commander
SELECT Nom_Article, Quantite_Stock_Article, Seuil_Reapprovisionnement_Article
FROM Article
WHERE Quantite_Stock_Article < Seuil_Reapprovisionnement_Article;

//Calcul montant total achats d'un client
SELECT
    SUM(
        Prix_HT_Article * 
        Taux_TVA_Modif * 
        Quantite_Commande_Article * 
        CASE 
            WHEN ISNULL(Modif.Taux_Reduction_Modif, 0) = 0 THEN 1 
            WHEN Article.Seuil_Reduction_Article <= Compose.Quantite_Commande_Article 
            THEN (Modif.Taux_Reduction_Modif)
            ELSE 1
        END
    ) AS MontantTotalClient
FROM
    Article
    INNER JOIN 
        Compose ON Article.Reference_Article = Compose.Reference_Article
    INNER JOIN 
        Commande ON Compose.ID_Commande = Commande.ID_Commande
    INNER JOIN 
        Comporte ON Comporte.Reference_Article = Article.Reference_Article
    INNER JOIN 
        Modif ON Modif.ID_Modif = Comporte.ID_Modif
    INNER JOIN 
        Effectue ON Commande.ID_Commande = Effectue.ID_Commande
    INNER JOIN 
        Clients ON Effectue.ID_Clients = Clients.ID_Clients
WHERE
    Clients.ID_Clients = 1;// Ajouter un getId_commande dans le code sur visual studio







//Ajouter un client (ici c'est un exemple de client avec des adresses)
INSERT INTO Personne (Nom_Personne, Prenom_Personne)
VALUES ('A', 'a');

INSERT INTO Adresse (Rue_Adresse, Numero_Maison_Adresse, Nature_Adresse, ID_Ville)
VALUES ('bb', 1, 'Facturation', 1);

INSERT INTO Adresse (Rue_Adresse, Numero_Maison_Adresse, Nature_Adresse, ID_Ville)
VALUES ('cc', 2, 'Livraison', 2);

INSERT INTO Clients (Date_Naissance_Clients, Date_Premier_Achat_Clients, ID_Personne)
Values ('00/00/0000', '11/11/1111', 1);

INSERT INTO Possede (ID_Personne, ID_Adresse)
VALUES (1, (SELECT ID_Adresse FROM Adresse WHERE Rue_Adresse = 'cc' AND Numero_Maison_Adresse = 2 AND Nature_Adresse = 'Livraison'));

INSERT INTO Possede (ID_Personne, ID_Adresse)
VALUES (1, (SELECT ID_Adresse FROM Adresse WHERE Rue_Adresse = 'bb' AND Numero_Maison_Adresse = 1 AND Nature_Adresse = 'Facturation'));

//Ajouter un client (version VS code)
"INSERT INTO Personne (Nom_Personne, Prenom_Personne)" + "VALUES ('" + this->get_Nom() + "', '" + this->get_Prenom() + "');" + "INSERT INTO Adresse (Rue_Adresse, Numero_Maison_Adresse, Nature_Adresse, ID_Ville) VALUES ('" + this->Adresse_Facturation->get_Rue() + "', " + this->Adresse_Facturation->get_Numero_Maison() + ", '" + this->Adresse_Facturation->get_Nature() + "', " + this->Adresse_Facturation->verifier_Ville() + ");" + "INSERT INTO Adresse (Rue_Adresse, Numero_Maison_Adresse, Nature_Adresse, ID_Ville) VALUES ('" + this->Adresse_Livraison->get_Rue() + "', " + this->Adresse_Livraison->get_Numero_Maison() + ", '" + this->Adresse_Livraison->get_Nature() + "', " + this->Adresse_Livraison->verifier_Ville() + ");" + "INSERT INTO Clients (Date_Naissance_Clients, Date_Premier_Achat_Clients, ID_Personne) Values ('" + this->get_Date_Naissance() + "', '" + this->get_Date_Premier_Achat() + "', " + this->get_ID_Personne() + ");" + "INSERT INTO Possede (ID_Personne, ID_Adresse) VALUES (" + this->get_ID_Personne() + ", (SELECT ID_Adresse FROM Adresse WHERE Rue_Adresse = '" + this->Adresse_Livraison->get_Rue() + "', AND Numero_Maison_Adresse = " + this->Adresse_Livraison->get_Numero_Maison() + ", AND Nature_Adresse = '" + this->Adresse_Livraison->get_Nature() + "'));" + "INSERT INTO Possede (ID_Personne, ID_Adresse) VALUES (" + this->get_ID_Personne() + ", (SELECT ID_Adresse FROM Adresse WHERE Rue_Adresse = '" + this->Adresse_Facturation->get_Rue() + "', AND Numero_Maison_Adresse = " + this->Adresse_Facturation->get_Numero_Maison() + ", AND Nature_Adresse = '" + this->Adresse_Facturation->get_Nature() + "'));";


//Supprimer un client (SQL)
DELETE FROM Possede
WHERE ID_Personne = 30;

DELETE FROM Commande
WHERE ID_Commande = (SELECT ID_Commande FROM Effectue WHERE ID_Clients = (SELECT ID_Clients FROM Clients WHERE ID_Personne = 30));

DELETE FROM Effectue
WHERE ID_Clients = (SELECT ID_Clients FROM Clients WHERE ID_Personne = 30);

DELETE FROM Clients
WHERE ID_Personne = 30;

DELETE FROM Personne
WHERE ID_Personne = 30;

//Supprimer un client (VS code)
"DELETE FROM Possede WHERE ID_Personne = " + this->get_ID_Personne() + "; DELETE FROM Possede WHERE ID_Commande = (SELECT ID_Commande FROM Effectue WHERE ID_Clients = (SELECT ID_Clients FROM Clients WHERE ID_Personne = " + this->get_ID_Personne() + "));" + "DELETE FROM Effectue WHERE ID_Clients = (SELECT ID_Clients FROM Clients WHERE ID_Personne = " + this->get_ID_Personne() + ");" + "DELETE FROM Clients WHERE ID_Personne = " + this->get_ID_Personne() + ";" + "DELETE FROM Personne WHERE ID_Personne = " + this->get_ID_Personne() + ";";

//Modifier un client (SQL)
UPDATE Personne
SET Nom_Personne = 'Mouse', Prenom_Personne = 'Mickey'
WHERE ID_Personne = 24;

UPDATE Clients
SET Date_Naissance_Clients = '13/06/1964', Date_Premier_Achat_Clients = '07/07/2000'
WHERE ID_Personne = 24;

//Modifier un client (VS code)
"UPDATE Personne SET Nom_Personne = '" + this->get_Nom() + "', Prenom_Personne = '" + this->get_Prenom() + "' WHERE ID_Personne = " + this->get_ID_Personne() + "; UPDATE Clients SET Date_Naissance_Clients = '" + this->get_Date_Naissance() + "', Date_Premier_Achat_Clients = '" + this->get_Date_Premier_Achat() + "' WHERE ID_Personne = " + this->get_ID_Personne() + ";";

//Afficher la liste des clients (SQL et VS code)
SELECT Clients.ID_Clients, Clients.ID_Personne, Personne.Nom_Personne, Personne.Prenom_Personne, Clients.Date_Naissance_Clients, Clients.Date_Premier_Achat_Clients FROM Clients INNER JOIN Personne ON Clients.ID_Personne = Personne.ID_Personne;




/*Ajouter un personnel*/
DBCC CHECKIDENT (Personnel, RESEED, 20);
INSERT INTO Personne (Nom_Personne, Prenom_Personne)
VALUES ('Tom', 'Dupont');

INSERT INTO Personnel (DateEmbauche_personnel, ID_SuperieurHierarchique, ID_Personne)
VALUES ('2016-07-12', '4', 1);

INSERT INTO Adresse (Numero_Maison_Adresse, Rue_Adresse, Nature_Adresse, ID_Ville)
VALUES (43, 'Rue Amira', 'Habitation', 2);

//Ajouter un personnel (VS) 
"INSERT INTO Personne (Nom_Personne, Prenom_Personne) VALUES ('" + this->get_Nom() + "', '" + this->get_Prenom() + "');"
+ "INSERT INTO Personnel (DateEmbauche_Personnel, ID_SuperieurHierarchique) VALUES ('" + this->get_Date_Embauche() + "', '" + this->get_Superieur_Hierarchique() + "');"
+ "INSERT INTO Adresse (Numero_Maison_Adresse, Rue_Adresse, Nature_Adresse, ID_Ville) VALUES ('" + this->get_Adresse_Habitation()->get_Numero_Maison() + "', '" + this->get_Adresse_Habitation()->get_Rue() + "', '" + this->get_Adresse_Habitation()->get_Nature() + "', '" + this->get_Adresse_Habitation()->verifier_Ville() + "');";
}

/*Modifier un personnel*/
UPDATE Personne
SET Prenom_Personne = 'Tommy', Nom_Personne = 'Duponts'
WHERE ID_Personne = 1;

UPDATE Personnel
SET DateEmbauche_personnel = '2017-07-12', ID_SuperieurHierarchique = 3
WHERE ID_Personne = 1;

UPDATE Adresse
SET Numero_Maison_Adresse = 44, Rue_Adresse = 'Rue Amiras'
WHERE ID_Ville = 2;

//Modifier personnel (VS)
  "UPDATE Personne SET Nom_Personne = '" + this->get_Nom() + "', Prenom_Personne = '" + this->get_Prenom() + "' WHERE ID_Personne = " + this->get_ID_Personne() + ";"
+ "UPDATE Personnel SET DateEmbauche_Personnel = '" + this->get_Date_Embauche() + "', ID_SuperieurHierarchique = '" + this->get_Superieur_Hierarchique() + "' WHERE ID_Personne = " + this->get_ID_Personne() + ";"
+ "UPDATE Adresse SET Numero_Maison_Adresse = '" + this->get_Adresse_Habitation()->get_Numero_Maison() + "', Rue_Adresse = '" + this->get_Adresse_Habitation()->get_Rue() + "', Nature_Adresse = '" + this->get_Adresse_Habitation()->get_Nature() + "', ID_Ville = '" + this->get_Adresse_Habitation()->verifier_Ville() + "' WHERE Numero_Adresse = " + this->get_Adresse_Habitation()->get_Numero_Maison() + ";";

/*Afficher un personnel*/
SELECT 
    Personne.ID_Personne,
    Nom_Personne,
    Prenom_Personne,
    DateEmbauche_Personnel,
    ID_SuperieurHierarchique,
    CONCAT(Numero_Maison_Adresse, '  ', Rue_Adresse) AS Adresse
FROM 
    Personnel
INNER JOIN 
    Personne ON Personnel.ID_Personne = Personne.ID_Personne
INNER JOIN 
    Possede ON Personne.ID_Personne = Possede.ID_Personne
INNER JOIN
    Adresse ON Possede.ID_Adresse = Adresse.ID_Adresse
WHERE Personne.ID_Personne = 1;

//Afficher personnel (VS) 
	 " SELECT	Nom_Personne,Prenom_Personne,DateEmbauche_Personnel,ID_SuperieurHierarchique, CONCAT(Numero_Maison_Adresse, '  ', Rue_Adresse) AS Adresse FROM Personnel INNER JOIN Personne ON Personnel.ID_Personne = Personne.ID_Personne INNER JOIN Possede ON Personne.ID_Personne = Possede.ID_Personne INNER JOIN Adresse ON Possede.ID_Adresse = Adresse.ID_Adresse WHERE Personnel.ID_Personne =" + this->get_ID_Personne() + ";";


/*Supprimer un personnel*/
DELETE FROM Personnel 
WHERE ID_Personne = 1;

DELETE FROM Adresse 
WHERE ID_Ville = 2;

DELETE FROM Personne
WHERE ID_Personne = 1;

// Supprimer personnel (VS)
 "DELETE FROM Personne WHERE ID_Personne = " + this->get_ID_Personne() + ";"
+ "DELETE FROM Personnel WHERE ID_Personne = " + this->get_ID_Personne() + ";"
+ "DELETE FROM Possede WHERE ID_Personne = " + this->get_ID_Personne() + ";";





//SELECT Article
SELECT Reference_Article, Nom_Article, Quantite_Stock_Article, Prix_HT_Article, Seuil_Reduction_Article, Seuil_Reapprovisionnement_Article FROM Article;

//INSERT Article
INSERT INTO Article (Prix_HT_Article, Nom_Article, Seuil_Reduction_Article, Quantite_Stock_Article, Seuil_Reapprovisionnement_Article)
VALUES (13.99, 'Tada', 15, 368, 10);

//UPDATE Article
UPDATE Article
SET Prix_HT_Article = 15.99, Nom_Article = 'Ajout' , Seuil_Reduction_Article = 26, Quantite_Stock_Article = 265, Seuil_Reapprovisionnement_Article = 12
WHERE Reference_Article = 21;

//DELETE Article
DELETE FROM Compose
WHERE Reference_Article = 9;

DELETE FROM Comporte
WHERE Reference_Article = 9;

DELETE FROM Article
WHERE Reference_Article = 9;

//Affiche une Commande
SELECT
    C.ID_Commande,
    Cl.ID_Clients,
    C.Reference_Commande,
    C.Livraison_Prevue_Commande,
    C.Emission_Commande,
    A.Nom_Article,
    Co.Quantite_Commande_Article,
    P.Moyen_Paiement,
    P.Date_Paiement,
    P.Date_Solde_Paiement
FROM
    Commande C
JOIN
    Effectue E ON C.ID_Commande = E.ID_Commande
JOIN
    Clients Cl ON E.ID_Clients = Cl.ID_Clients
JOIN
    Compose Co ON C.ID_Commande = Co.ID_Commande
JOIN
    Article A ON Co.Reference_Article = A.Reference_Article
LEFT JOIN
    Paiement P ON C.ID_Commande = P.ID_Commande
WHERE C.ID_Commande = 5;

//Insérer une commande


//Supprimer une commande
DELETE FROM Effectue WHERE ID_Commande = 5;
DELETE FROM Compose WHERE ID_Commande = 5;
DELETE FROM Comprend WHERE ID_Commande = 5;
DELETE FROM Comporte WHERE Reference_Article IN (SELECT Reference_Article FROM Compose WHERE ID_Commande = 5);
DELETE FROM Paiement WHERE ID_Commande = 5;
DELETE FROM Commande WHERE ID_Commande = 5;

//Modifier une commande

